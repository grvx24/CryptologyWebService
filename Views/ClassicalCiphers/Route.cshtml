
<script src="~/js/ciphers/ClassicalCiphers.js"></script>

<div class="container">
    <div class="tab">
        <button id="defaultPageButton" class="tablinks" onclick="openTab(event, 'Description')">@Text.Description</button>
        <button class="tablinks" onclick="openTab(event, 'Tools')">@Text.Action</button>
        <button class="tablinks" onclick="openTab(event, 'Visualization')">@Text.Visualization</button>
    </div>

    <div id="Description" class="tabcontent">
        <h2 class="title">Szyfr ścieżkowy</h2>
        <p class="description">
            <b>Szyfr ścieżkowy</b> jest szyfrem przestawieniowym. Jego działanie polega na przestawieniu kolejności liter,
            bazując na uproszczonym kształcie ścieżki poprowadzonej przez komórki tabeli. Litery tekstu jawnego zapisywane są w tabeli
            o wymiarach określonych przez sekretny klucz. Tabela wypełniana jest wierszami, od lewej do prawej. 
            <br>Natomiast szyfrogramu odczytywany jest poruszając się po okręgu, w kierunku zgodnym ze wskazówkami zegara, poczynając od górnego prawego rogu.
        </p>
    </div>
    <div id="Tools" class="tabcontent col-lg-12">
        @await Html.PartialAsync("_RoutePartial")
    </div>

    <div id="Visualization" class="tabcontent col-lg-12">
        @await Html.PartialAsync("_RouteVisualization")
    </div>
</div>


<script>

    document.getElementById("defaultPageButton").click();

    function openTab(evt, tabName) {
        var i;
        var tabContent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabContent.length; i++) {
            tabContent[i].style.display = "none";
        }
        var tabLinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tabLinks.length; i++) {
            tabLinks[i].className = tabLinks[i].className.replace(" active", "");
        }
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
    }
    
    //Ajax
    var routeInit = RouteCipherInit({
        urls: {
            encryptUrl: '@Url.Action("RouteEncrypt", "ClassicalCiphers")',
            decryptUrl: '@Url.Action("RouteDecrypt", "ClassicalCiphers")'
        }
    });

    routeInit.init();




</script>