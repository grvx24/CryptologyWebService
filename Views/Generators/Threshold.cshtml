<script src="~/js/generators/Generators.js"></script>
<link rel="stylesheet" href="~/css/generators.css" />

<div class="container">
    <div class="tab">
        <button id="defaultPageButton" class="tablinks" onclick="openTab(event, 'Description')">@Text.Description</button>
        <button class="tablinks" onclick="openTab(event, 'Tools')">@Text.Action</button>
        <button class="tablinks" onclick="openTab(event, 'Visualization')">@Text.Visualization</button>
    </div>

    <div id="Description" class="tabcontent">
        <h2 class="title">Generator progowy</h2>
        <p class="description">
            Zaproponowany przez J.O. Bruera w 1984 r. Używa zmiennej (nieparzystej)
            liczby rejestrów LFSR. Funkcję progową wyraża się wzorem:
            <br>
            <img class="center-block" src="~/images/Description/Generators/progowy_formula.png" alt="TresholdFormula" style="width:32%">
            <br>
            Okres tego generatora jest maksymalny wtedy gdy długości wszystkich rejestrów
            są względnie pierwsze, a wielomiany gałęzi sprzężenia zwrotnego pierwotne.
            Złożoność liniowa generatora zbudowanego z trzech rejestrów jest równa <i>L<sub>1</sub>L<sub>2</sub></i> +
            <i>L<sub>1</sub>L<sub>3</sub></i> + <i>L<sub>2</sub>L<sub>3</sub></i> gdzie <i>L</i> oznacza długość rejestru, a jego okres jest iloczynem okresów
            trzech rejestrów składowych. Na poniższym rysunku przedstawiono schemat działania
            generatora progowego.
            <br><br>
            <img class="center-block" src="~/images/Description/Generators/gen_progowy.png" alt="Threshold" style="width:640px;">
            <br><br>
        </p>
    </div>
    <div id="Tools" class="tabcontent col-lg-12">

        @await Html.PartialAsync("_ThresholdPartial")

    </div>

    <div id="Visualization" class="tabcontent col-lg-12">
        @await Html.PartialAsync("_ThresholdVisualization")
    </div>


</div>


<script>
    document.getElementById("defaultPageButton").click();

    function openTab(evt, tabName) {
        var i;
        var tabContent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabContent.length; i++) {
            tabContent[i].style.display = "none";
        }
        var tabLinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tabLinks.length; i++) {
            tabLinks[i].className = tabLinks[i].className.replace(" active", "");
        }
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
    }
</script>
