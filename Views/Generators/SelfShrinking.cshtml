<script src="~/js/generators/Generators.js"></script>
<link rel="stylesheet" href="~/css/generators.css" />

<div class="container">
    <div class="tab">
        <button id="defaultPageButton" class="tablinks" onclick="openTab(event, 'Description')">@Text.Description</button>
        <button class="tablinks" onclick="openTab(event, 'Tools')">@Text.Action</button>
        <button class="tablinks" onclick="openTab(event, 'Visualization')">@Text.Visualization</button>
    </div>

    <div id="Description" class="tabcontent">
        <h2 class="title">generator samoobcinający</h2>
        <p class="description">
            Jest to generator podobny do obcinającego, ale zamiast dwóch rejestrów LFSR,
            stosuje się parę bitów wyjściowych jednego rejestru LFSR. Działanie
            polega na dwukrotnym taktowaniu LFSR i jeżeli pierwszym bitem w parze jest 1, to
            bitem wyjściowym jest drugi bit z pary. Jeżeli pierwszym bitem w wygenerowanej
            parze jest 0, to oba bity zostają odrzucone, po czym rozpoczynamy od nowa.
            Wymagania pamięciowe tego generatora są o połowę mniejsze od generatora obcinającego,
            ale za to jest o wiele wolniejszy.
            Poniższy rysunek przedstawia schemat działania generatora samoobcinającego.
            <br><br>
            <img class="center-block" src="~/images/Description/Generators/gen_samoobcinajacy.png" alt="SelfShrinking" style="width:600px;">
            <br><br>
</div>
    <div id="Tools" class="tabcontent col-lg-12">

        @await Html.PartialAsync("_SelfShrinkingPartial")

    </div>

    <div id="Visualization" class="tabcontent col-lg-12">
        @await Html.PartialAsync("_SelfShrinkingVisualization")
    </div>


</div>


<script>
    document.getElementById("defaultPageButton").click();

    function openTab(evt, tabName) {
        var i;
        var tabContent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabContent.length; i++) {
            tabContent[i].style.display = "none";
        }
        var tabLinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tabLinks.length; i++) {
            tabLinks[i].className = tabLinks[i].className.replace(" active", "");
        }
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
    }
</script>
