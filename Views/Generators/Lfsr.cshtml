<script src="~/js/generators/Generators.js"></script>
<link rel="stylesheet" href="~/css/generators.css" />

<div class="container">
    <div class="tab">
        <button id="defaultPageButton" class="tablinks" onclick="openTab(event, 'Description')">@Text.Description</button>
        <button class="tablinks" onclick="openTab(event, 'Tools')">@Text.Action</button>
        <button class="tablinks" onclick="openTab(event, 'Visualization')">@Text.Visualization</button>
    </div>

    <div id="Description" class="tabcontent">
        <h2 class="title">Liniowy rejestr przesuwający LFSR</h2>
        <p class="description">
            <b>Liniowy n-stopniowy rejestr przesuwający LFSR</b> składa się z <i>n</i> przerzutników
            oraz liniowej funkcji sprzężenia zwrotnego <i>f</i>(<i>x<sub>0</sub></i>, <i>x<sub>1</sub></i>, ..., <i>x<sub>n–1</sub></i>). Przerzutniki są komórkami pamięci reprezentującymi jedną cyfrę dwójkową. W każdym kroku element <i>x<sub>i</sub></i>
            znajdujący się w komórce o numerze <i>i</i> przesuwany jest w lewo do komórki o numerze <i>i</i>–1 dla <i>i</i> = 2, 3, 4, ..., <i>n</i>–1. Natomiast w komórce <i>n</i>–1 umieszczana jest wartość
            funkcji sprzężenia zwrotnego <i>f</i>(<i>x<sub>0</sub></i>, <i>x<sub>1</sub></i>, ..., <i>x<sub>n–1</sub></i>) wyznaczona w poprzednim kroku.
            Ziarnem nazywamy stan <i>n</i> bitów <i>x<sub>0</sub></i><i>x<sub>1</sub></i>...<i>x<sub>n–1</sub></i>, z którego rejestr rozpoczyna pracę. Schemat działania rejestru został pokazany na poniższym rysunku.
            <br><br>
            <img class="center-block" src="~/images/Description/Generators/lfsr.jpg" alt="Lfsr" style="width:600px;">
            <br>
            Dla n-stopniowego rejestru przesuwającego, maksymalny okres ciągu jaki może
            być wygenerowany wynosi:
            <br>
            <img class="center-block" src="~/images/Description/Generators/lfsr_formula.png" alt="LfsrFormula" style="width:14%;">
            <br>
            Liniowa funkcja sprzężenia zwrotnego wykonuje działania XOR na kilku bitach
            stanu. Wybór bitów, które są poddawane operacji XOR decyduje o tym czy uda
            sie osiągnać maksymalny okres. Okres jest maksymalny wtedy i tylko wtedy gdy
            wielomian jest pierwotny. Przykładowy wielomian 1 + <i>x<sup>2</sup></i> + <i>x<sup>4</sup></i> + <i>x<sup>5</sup></i> oznacza, że bity
            na pozycjach 2, 4 i 5 są poddawane operacji XOR.
        </p>
    </div>
    <div id="Tools" class="tabcontent col-lg-12">

        @await Html.PartialAsync("_LfsrPartial")

    </div>

    <div id="Visualization" class="tabcontent col-lg-12">
        @await Html.PartialAsync("_LfsrVisualization")
    </div>


</div>


<script>
    document.getElementById("defaultPageButton").click();

    function openTab(evt, tabName) {
        var i;
        var tabContent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabContent.length; i++) {
            tabContent[i].style.display = "none";
        }
        var tabLinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tabLinks.length; i++) {
            tabLinks[i].className = tabLinks[i].className.replace(" active", "");
        }
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
    }
</script>
