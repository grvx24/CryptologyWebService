@using CryptoWebService.Helpers;
@model PageViewModel;

<h2 class="page-header"></h2>
<div class="col-lg-12">
    <div class="body-content">
        Kryptografia wizualna to technika, która pozwala ukryć informacje będące ob-razem np.
        zdjęcie lub dokument poprzez podział na udziały. Poprzez udział należyrozumieć jedną z
        części zaszyfrowanego obrazu. Odczytywanie ukrytych informacjiodbywa się za pomocą wzroku,
        nakładając na siebie wymaganą liczbę udziałów. Wzależności  od  metody  mogą  być  wymagane
        wszystkie  udziały  lub  tylko  określonaliczba ze wszystkich udziałów. Przykładowy wygląd
        udziałów i efekt uzyskany ponałożeniu ich na siebie został przedstawiony na rysunku 39.
    </div>
    <h3 class="panel-group">Przykład: </h3>
    <div class="body-content  text-center">
        @{
            await Html.RenderPartialAsync(ViewControlsHelper.GetVisualCryptographyControlPath("AnimationControl"), Model.AnimationList[0]);
        }
    </div>
    <h3 class="panel-group">Obraz czarno biały</h3>
    <div class="body-content">
        Algorytm  podziału  czarno-białego  obrazu  na  dwa  udziały  polega  on
        na  za-stąpieniu każdego piksela obrazu ukrywanego, dwoma pikselami o różnych
        kolorach(czarny i przeźroczysty) i stworzenia z nich 2 udziałów [2].W omawianej
        metodzie mamy do wyboru dwa warianty zakodowania każde-go  piksela  (rysunek 40).
        W  celu  zwiększenia bezpieczeństwa,  decyzja  o  tym  gdzieznajduje się czarny
        piksel jest podejmowana losowo. Prawdopodobieństwo wybraniajednej ze stron jest
        jednakowo prawdopodobne co wybranie drugiej strony.
    </div>
    <div class="body-content">
        Jeżeli piksel, który chcemy zakodować jest biały lub przeźroczysty, to na oby-dwóch
        udziałach  czarny  subpiksel  powinien  znajdować  się  w  tym  samym  miejscu(rysunek 41).
        Podczas odszyfrowywania – nałożenia na siebie dwóch udziałów, kolorbiały zostanie zastąpiony
        kolorem czarnym i przeźroczystym. Będzie to dawało efektkoloru szarego.
    </div>
    <div class="body-content">
        Jeżeli  kodujemy  piksel  koloru  czarnego,  to  piksele  w  udziale  2  powinny  być przeciwne
        do pikseli z udziału pierwszego. To znaczy jeśli w udziale pierwszym ko-lor czarny jest po
        lewejstronie, to w udziale drugim powinien być po prawej stronie.Po nałożeniu tak
        skonstruowanych udziałów, czarne piksele nakryją przeźroczyste iuzyskamy kolor czarny
        w obrazie dekodowanym (rysunek 42).
    </div>
    <div class="body-content">
        Zaprezentowana powyżej metoda pozwala szyfrować czarno-biały obraz za po-mocą dwóch udziałów.
        Metoda ta ma jednak wadę – rozciąga nasz obraz w kierunkupoziomym (rysunek 43).
        Jest to spowodowane zastępowaniem jednego piksela dwo-ma.
    </div>
    <div class="body-content  text-center">
        @{
            await Html.RenderPartialAsync(ViewControlsHelper.GetVisualCryptographyControlPath("ImageControl"), Model.ImageList[0]);
        }
    </div>
    <div class="body-content">
        Możemy  uniknąć  zniekształcenia  w  jednym  kierunku,  zastępując  piksele  ko-dowane nie dwoma,
        ale czterema pikselami ułożonymi w kwadrat. Ta metoda jestodrobinę wolniejsza, ale nie zmienia
        proporcji obrazu i dzięki zwiększeniu liczby pik-seli szyfrujących udziały są bardziej bezpieczne [2]
    </div>
    <div class="body-content">
        Schemat działania jest bardzo podobny. Mamy 6 macierzy służących do ko-dowania jednego piksela
        (rysunek 44), macierz którą zakodujemy dany piksel jestwybierana losowo. Piksel biały kodujemy
        tą samą macierzą na obydwóch udziałach,a podczas kodowania piksela czarnego udział drugi kodujemy
        macierzą przeciwnądo macierzy, którą zakodowaliśmy udział 1.
    </div>
    <h3 class="panel-group">Zastosowanie</h3>
    <div class="body-content">
        Kryptografia wizualna może zostać zastosowana wszędzie tam, gdzie chcemyrozdzielić informację na
        kilka osób i pozwolić na jej odczyt wyłącznie, gdy wszystkieosoby będą razem.
    </div>

    <div class="body-content  text-center">
        @{
            await Html.RenderPartialAsync(ViewControlsHelper.GetVisualCryptographyControlPath("ImageControl"), Model.ImageList[1]);
        }
    </div>

    <div class="body-content  text-center">
        @{
            await Html.RenderPartialAsync(ViewControlsHelper.GetVisualCryptographyControlPath("AnimationControl"), Model.AnimationList[1]);
        }
    </div>
</div>

